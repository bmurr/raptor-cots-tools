import struct
import numpy as np
from PIL import Image

RAPTOR_PALETTE = [[0, 0, 0], [226, 222, 222], [218, 214, 214], [210, 206, 206], [202, 198, 198], [194, 194, 194], [186, 186, 186], [182, 178, 178], [174, 170, 170], [165, 161, 161], [157, 157, 157], [149, 149, 149], [141, 141, 141], [137, 133, 133], [129, 125, 125], [121, 121, 121], [113, 113, 113], [105, 105, 105], [97, 97, 97], [93, 89, 89], [85, 85, 85], [76, 76, 76], [68, 68, 68], [60, 60, 60], [52, 52, 52], [48, 48, 48], [40, 40, 40], [32, 32, 32], [24, 24, 24], [16, 16, 16], [8, 8, 8], [4, 4, 4], [246, 105, 109], [230, 93, 97], [218, 80, 85], [206, 68, 76], [190, 56, 64], [178, 48, 56], [165, 40, 48], [149, 32, 40], [137, 24, 36], [125, 16, 28], [109, 12, 24], [97, 8, 16], [85, 4, 12], [68, 0, 8], [56, 0, 4], [36, 0, 4], [234, 222, 141], [218, 206, 121], [202, 194, 105], [190, 178, 85], [174, 165, 72], [157, 149, 60], [141, 137, 48], [129, 121, 36], [113, 109, 28], [97, 97, 20], [85, 80, 12], [68, 68, 8], [56, 52, 4], [40, 40, 0], [24, 24, 0], [12, 12, 0], [255, 157, 97], [238, 129, 72], [222, 113, 60], [206, 97, 52], [190, 85, 44], [174, 68, 36], [161, 56, 28], [145, 44, 20], [129, 36, 16], [113, 24, 12], [101, 16, 8], [85, 12, 4], [68, 4, 0], [52, 0, 0], [36, 0, 0], [24, 0, 0], [246, 202, 28], [238, 178, 28], [230, 157, 24], [222, 137, 24], [214, 117, 24], [206, 101, 20], [198, 85, 20], [190, 68, 20], [178, 64, 16], [165, 60, 16], [157, 56, 12], [145, 52, 12], [137, 48, 12], [125, 44, 8], [105, 36, 4], [89, 28, 4], [141, 161, 129], [125, 149, 113], [113, 141, 97], [101, 133, 85], [89, 125, 72], [72, 117, 60], [64, 109, 48], [52, 101, 40], [40, 93, 32], [32, 80, 24], [24, 72, 16], [12, 60, 8], [8, 48, 4], [4, 36, 0], [0, 24, 0], [0, 12, 0], [198, 206, 255], [182, 190, 242], [170, 178, 230], [153, 161, 222], [141, 145, 210], [129, 133, 198], [117, 121, 190], [105, 109, 178], [97, 97, 165], [85, 85, 157], [76, 76, 145], [68, 68, 133], [60, 56, 125], [52, 48, 113], [40, 36, 89], [28, 24, 68], [89, 178, 255], [80, 157, 238], [72, 145, 222], [68, 125, 206], [60, 113, 190], [56, 97, 178], [48, 85, 161], [44, 72, 145], [36, 60, 129], [32, 48, 113], [28, 40, 101], [20, 32, 85], [16, 24, 68], [12, 16, 52], [8, 8, 36], [4, 4, 24], [109, 170, 178], [97, 157, 165], [85, 149, 157], [72, 141, 149], [60, 133, 141], [52, 121, 133], [44, 113, 125], [36, 105, 117], [28, 97, 109], [20, 89, 97], [16, 80, 89], [8, 72, 80], [4, 64, 72], [4, 56, 64], [0, 36, 44], [0, 20, 28], [222, 206, 238], [210, 194, 226], [198, 182, 214], [186, 174, 202], [174, 161, 190], [165, 153, 178], [153, 141, 165], [141, 129, 153], [129, 121, 141], [117, 109, 129], [109, 101, 117], [97, 89, 105], [85, 76, 93], [72, 68, 80], [52, 48, 56], [32, 28, 36], [238, 214, 190], [230, 206, 182], [226, 198, 170], [218, 186, 161], [210, 182, 157], [206, 174, 149], [198, 165, 141], [194, 157, 133], [186, 149, 125], [182, 141, 117], [174, 133, 113], [170, 125, 105], [161, 117, 97], [153, 109, 93], [149, 101, 85], [141, 97, 80], [137, 89, 72], [129, 85, 68], [125, 76, 64], [117, 68, 56], [113, 64, 52], [105, 56, 48], [101, 52, 44], [93, 48, 40], [85, 40, 36], [80, 36, 32], [72, 32, 28], [68, 28, 24], [60, 24, 20], [56, 16, 16], [40, 12, 8], [20, 0, 0], [218, 206, 182], [210, 198, 174], [206, 190, 165], [198, 186, 161], [194, 178, 153], [186, 174, 149], [182, 165, 141], [174, 157, 137], [170, 153, 129], [165, 145, 125], [157, 141, 117], [153, 133, 113], [145, 125, 109], [141, 121, 101], [133, 117, 97], [129, 109, 93], [121, 101, 85], [117, 97, 80], [109, 89, 76], [105, 85, 72], [101, 80, 68], [93, 72, 60], [89, 68, 56], [80, 60, 52], [76, 56, 48], [68, 52, 44], [64, 48, 40], [56, 40, 36], [52, 36, 32], [48, 32, 28], [32, 16, 12], [16, 8, 4], [36, 105, 117], [56, 121, 133], [44, 113, 125], [36, 101, 117], [20, 89, 97], [161, 56, 16], [186, 80, 20], [210, 113, 20], [194, 85, 20], [141, 48, 12], [178, 64, 16], [194, 85, 12], [246, 56, 68], [85, 161, 105], [89, 178, 255], [218, 218, 218]]

class RaptorTile(object):

    def __init__(self, u1, u2, u3, height, width, palette_pixels):
        self.palette_pixels = palette_pixels

def show_image_from_indices(indices, height, width):
    out = np.zeros((height, width, 4), dtype=np.uint8)    
    image_rows = [indices[x:x+width] for x in range(0, len(indices), width)]
    for row_index, palette_pixels in enumerate(image_rows):
        pixels = [RAPTOR_PALETTE[ord(i)] + [255] for i in palette_pixels]
        out[row_index] = pixels            
    i = Image.fromarray(out, 'RGBA')
    # i = i.resize((height * 2, width * 2)) 
    i.show()

def show_entire_tileset(tiles, height=42):    
    width = len(tiles) / height
    out = np.zeros((height * 32, width * 32, 4), dtype=np.uint8)
    
    for y in range(0, height * 32, 32):
        for x in range(0, width * 32, 32):
            tile = tiles[(y / 32 * width) + x / 32]
            tile_pixels = [RAPTOR_PALETTE[ord(i)] + [255] for i in tile.palette_pixels]
            shaped_tile_data = np.array(tile_pixels).reshape(32, 32, 4)            
            out[y:y+32, x:x+32] = shaped_tile_data

    i = Image.fromarray(out, 'RGBA')
    print len(tiles)

    # i = i.resize([d for d in i.size]) 
    # i.save('STARTG1TILES.png')


if __name__ == '__main__':
    with open('./data/FILE0001.GLB/STARTG1TILES') as f:
        data = f.read()

    TILE_SIZE = 0x414
    tile_bytes = [data[i:i+TILE_SIZE] for i in range(0, len(data), TILE_SIZE)]

    tiles = []
    for data in tile_bytes:
        tile_fields = struct.unpack('IIIII{}s'.format(len(data) - 5 * 4), data)
        tiles.append(RaptorTile(*tile_fields))

    show_entire_tileset(tiles, height=42)
